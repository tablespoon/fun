#!/bin/bash


DIGIT_COLOR=RED
COLON_COLOR=YELLOW


BLACK=0 RED=1 GREEN=2 YELLOW=3 BLUE=4 MAGENTA=5 CYAN=6 WHITE=7
DC="\e[3${!DIGIT_COLOR};4${!DIGIT_COLOR}m" CC="\e[3${!COLON_COLOR};4${!COLON_COLOR}m" NC="\e[m"

NUM[${#NUM[@]}]="######|##__##|##__##|##__##|######"
NUM[${#NUM[@]}]="____##|____##|____##|____##|____##"
NUM[${#NUM[@]}]="######|____##|######|##____|######"
NUM[${#NUM[@]}]="######|____##|######|____##|######"
NUM[${#NUM[@]}]="##__##|##__##|######|____##|____##"
NUM[${#NUM[@]}]="######|##____|######|____##|######"
NUM[${#NUM[@]}]="######|##____|######|##__##|######"
NUM[${#NUM[@]}]="######|____##|____##|____##|____##"
NUM[${#NUM[@]}]="######|##__##|######|##__##|######"
NUM[${#NUM[@]}]="######|##__##|######|____##|____##"
COLON="__|::|__|::|__"
HEIGHT=$(awk -F\| '{ print NF }' <<<${COLON})
CLOCKCOUNT=4

FLAG24H=I
if [[ $1 == "--24hour" ]]; then
	FLAG24H=H
	shift
fi

function show_time {
	ARGC=$#

	# get time
	if [[ $ARGC == 0 ]]; then
		# no arguments, do local
		time=$(
			while read -sn1 char; do
				printf "${char} "
			done <<<$(date "+%${FLAG24H}:%M:%S %Z")
		)
	else
		ZONEARG=$1
		time=$(
			while read -sn1 char; do
				printf "${char} "
			done <<<$(TZ=$ZONEARG date "+%${FLAG24H}:%M:%S %Z")
		)
	fi

	# print out each character
	for (( y=1; ${y} <= ${HEIGHT}; y++ )); do
		for char in ${time}; do
			case ${char} in
				[0-9])
					string="${NUM[${char}]}"
				;;

				[:])
					string="${COLON}"
				;;
				*)
					string="${char}"
				;;
			esac
			printf "  $(cut -f ${y} -d '|' <<<${string} | sed "s/\(#\+\)/\\${DC}\1/g ; \
									s/\(:\+\)/\\${CC}\1/g ; \
									s/\(_\+\)/\\${NC}\1/g ; \
									s/_/ /g")${NC}"
		done && [[ ${y} != ${HEIGHT} ]] && echo
	done

	echo "" ; echo ""
}

while sleep .1; do

	if [[ ${SECONDS} == ${seconds_log} ]]; then
		continue
	else
		# track seconds
		seconds_log=${SECONDS}

		# determine screen size
		dimensions=$(
			tput -S <<-!
				lines
				cols
			!
		)
		lines=${dimensions%%$'\x0a'*}
		cols=${dimensions##*$'\x0a'}

		# clear for new dimensions
		if [[ ${dimensions} != ${dimensions_log} ]]; then
			dimensions_log=${dimensions}
			clear
		fi

		tput -S <<-!
			cup $(( ( lines - HEIGHT * CLOCKCOUNT ) / 2 )) 0
			civis
		!

		show_time # local
		show_time "America/New_York"
		show_time GMT
		show_time 'Asia/Singapore'

		[[ $1 == "--hide-cursor" ]] || tput -S <<-!
			cup ${lines} ${cols}
			cnorm
		!
	fi
done
